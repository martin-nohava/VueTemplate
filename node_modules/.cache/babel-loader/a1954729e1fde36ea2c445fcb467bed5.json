{"remainingRequest":"/Users/martin_nohava/Documents/VueTemplate/node_modules/babel-loader/lib/index.js!/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/martin_nohava/Documents/VueTemplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue?vue&type=template&id=6ef6ca5e&scoped=true&bindings={\"newPostContent\":\"data\",\"selectedPostType\":\"data\",\"folowers\":\"data\",\"postTypes\":\"data\",\"user\":\"data\",\"fullName\":\"options\",\"newPostCharacterCount\":\"options\",\"followUser\":\"options\",\"toggleFavourite\":\"options\",\"createNewPost\":\"options\"}","dependencies":[{"path":"/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue","mtime":1602517022801},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCB7IHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIHZNb2RlbFNlbGVjdCBhcyBfdk1vZGVsU2VsZWN0LCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi02ZWY2Y2E1ZSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNmVmNmNhNWUiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAidXNlci1wcm9maWxlIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV9zaWRlYmFyIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV91c2VyLXBhbmVsIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV91c2VybmFtZSIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAidXNlci1wcm9maWxlX2FkbWluLWJhZGdlIgp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV9mb2xsb3dlci1jb3VudCIKfTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3Ryb25nIiwgbnVsbCwgIkZvbGxvd2VyczogIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzggPSB7CiAgZm9yOiAibmV3UG9zdCIKfTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3Ryb25nIiwgbnVsbCwgIk5ldyBQb3N0IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAidXNlci1wcm9maWxlX2NyZWF0ZS1wb3N0LXR5cGUiCn07Cgp2YXIgX2hvaXN0ZWRfMTEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIHsKICBmb3I6ICJuZXdQb3N0VHlwZSIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInN0cm9uZyIsIG51bGwsICJUeXBlOiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEyID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgbnVsbCwgIiBQb3N0ICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xMyA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV9wb3N0cy13cmFwcGVyIgp9OwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0NyZWF0ZVBvc3RQYW5lbCA9IF9yZXNvbHZlQ29tcG9uZW50KCJDcmVhdGVQb3N0UGFuZWwiKTsKCiAgdmFyIF9jb21wb25lbnRfUG9zdEl0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudCgiUG9zdEl0ZW0iKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJoMSIsIF9ob2lzdGVkXzQsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEudXNlci51c2VybmFtZSksIDEKICAvKiBURVhUICovCiAgKSwgJGRhdGEudXNlci5pc0FkbWluID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF81LCAiIEFkbWluICIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX2hvaXN0ZWRfNywgX2NyZWF0ZVRleHRWTm9kZSgiICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmZvbG93ZXJzKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIkBzdWJtaXQucHJldmVudCBpcyBkaXNhYmxpbmcgZGVmYXVsdCBldmVudCBvZiBmb3JtIGVsZW1lbnQgYW5kIGFkZGluZyBjdXN0b20iKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiY2xhc3MgZXhjZWVkZWQgaXMgYWRkZWQgd2hlbiBjb25kaXRpb24gaXMgbWV0IiksIF9jcmVhdGVWTm9kZSgiZm9ybSIsIHsKICAgIGNsYXNzOiBbInVzZXItcHJvZmlsZV9jcmVhdGUtcG9zdCIsIHsKICAgICAgJ2V4Y2VlZGVkJzogJG9wdGlvbnMubmV3UG9zdENoYXJhY3RlckNvdW50ID4gNjkKICAgIH1dLAogICAgb25TdWJtaXQ6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuY3JlYXRlTmV3UG9zdC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0sIFsicHJldmVudCJdKSkKICB9LCBbX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIF9ob2lzdGVkXzgsIFtfaG9pc3RlZF85LCBfY3JlYXRlVGV4dFZOb2RlKCIgKCIgKyBfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLm5ld1Bvc3RDaGFyYWN0ZXJDb3VudCkgKyAiLzY5KSAiLCAxCiAgLyogVEVYVCAqLwogICldKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiVi1tb2RlbCBpcyBzYXZpbmcgdmFsdWUgb2YgdGV4dGZpZWxkIHRvIHNlbGVjdGVkIHZhcmlhYmxlIiksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInRleHRhcmVhIiwgewogICAgaWQ6ICJuZXdQb3N0IiwKICAgIHJvd3M6ICI0IiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5uZXdQb3N0Q29udGVudCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLm5ld1Bvc3RDb250ZW50XV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2hvaXN0ZWRfMTEsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInNlbGVjdCIsIHsKICAgIGlkOiAibmV3UG9zdFR5cGUiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnNlbGVjdGVkUG9zdFR5cGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIFtfY3JlYXRlQ29tbWVudFZOb2RlKCJVc2luZyBpbmRleCBvZiBhcnJheSBhcyB1bmlxdWUga2V5IHBhcmFtZXRyIiksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5wb3N0VHlwZXMsIGZ1bmN0aW9uIChvcHRpb24sIGluZGV4KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soIm9wdGlvbiIsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgdmFsdWU6IG9wdGlvbi52YWx1ZQogICAgfSwgX3RvRGlzcGxheVN0cmluZyhvcHRpb24ubmFtZSksIDkKICAgIC8qIFRFWFQsIFBST1BTICovCiAgICAsIFsidmFsdWUiXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsU2VsZWN0LCAkZGF0YS5zZWxlY3RlZFBvc3RUeXBlXV0pXSksIF9ob2lzdGVkXzEyXSwgMzQKICAvKiBDTEFTUywgSFlEUkFURV9FVkVOVFMgKi8KICApXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0NyZWF0ZVBvc3RQYW5lbCwgewogICAgIm9uQWRkLXBvc3QiOiBfY3R4LmFkZFBvc3QKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25BZGQtcG9zdCJdKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEzLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnVzZXIucG9zdHMsIGZ1bmN0aW9uIChwb3N0KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9Qb3N0SXRlbSwgewogICAgICBrZXk6IHBvc3QuaWQsCiAgICAgIHVzZXJuYW1lOiAkZGF0YS51c2VyLnVzZXJuYW1lLAogICAgICBwb3N0OiBwb3N0LAogICAgICBvbkZhdm91cml0ZTogJG9wdGlvbnMudG9nZ2xlRmF2b3VyaXRlCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbInVzZXJuYW1lIiwgInBvc3QiLCAib25GYXZvdXJpdGUiXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKV0pOwp9KTs="},{"version":3,"sources":["/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"user-profile\">\n    <div class=\"user-profile_sidebar\">\n        <div class=\"user-profile_user-panel\">\n            <h1 class=\"user-profile_username\">{{user.username}}</h1>\n            <div class=\"user-profile_admin-badge\" v-if=\"user.isAdmin\">\n                Admin\n            </div>\n            <div class=\"user-profile_follower-count\">\n                <strong>Followers: </strong> {{folowers}}\n            </div>\n            <!--@submit.prevent is disabling default event of form element and adding custom-->\n            <!--class exceeded is added when condition is met-->\n            <form class=\"user-profile_create-post\" @submit.prevent=\"createNewPost\" :class=\"{'exceeded': newPostCharacterCount > 69}\">\n                <label for=\"newPost\"><strong>New Post</strong> ({{newPostCharacterCount}}/69) </label>\n                <!--V-model is saving value of textfield to selected variable-->\n                <textarea id=\"newPost\" rows=\"4\" v-model=\"newPostContent\"/>\n            \n                <div class=\"user-profile_create-post-type\">\n                    <label for=\"newPostType\"><strong>Type:</strong></label>\n                    <select id=\"newPostType\" v-model=\"selectedPostType\">\n                        <!--Using index of array as unique key parametr-->\n                        <option v-for=\"(option, index) in postTypes\" :key=\"index\" :value=\"option.value\">\n                            {{option.name}}\n                        </option>\n                    </select>\n                </div>\n                <button>\n                    Post\n                </button>\n            </form>\n        </div>\n        <CreatePostPanel @add-post=\"addPost\"/>\n    </div>\n    <div class=\"user-profile_posts-wrapper\">\n       <PostItem \n            v-for=\"post in user.posts\" \n            v-bind:key=\"post.id\" \n            v-bind:username=\"user.username\" \n            v-bind:post=\"post\" \n            @favourite=\"toggleFavourite\">\n       </PostItem>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostItem from './PostItem.vue';\nimport CreatePostPanel from './CreatePostPanel';\n\nexport default {\n  name: 'UserProfile',\n  components: {\n      PostItem,\n      CreatePostPanel\n  },\n  //Function for storing and returning data of our application\n  data() {\n    return {\n        newPostContent: '',\n        selectedPostType: 'instant',\n        folowers: 0,\n        postTypes: [\n          {\n            value: 'draft',\n            name: 'Draft'\n          },\n          {\n            value: 'instant',\n            name: 'Instant Post'\n          }\n        ],\n      //Temp user object\n      user: {\n        id: 1,\n        username: '@martin_nohava',\n        firstName: 'Martin',\n        lastName: 'Nohava',\n        email: 'martin@nohava.cz',\n        isAdmin: true,\n        posts: [\n            {\n                id: 1,\n                content: 'Hello World, my first post!'\n            },\n            {\n                id: 2,\n                content: 'Catch me if you can.'\n            }\n        ]\n      }\n    }\n  },\n  //Watches a datapoint and when change is detected on that datapoint this method is executed\n  watch: {\n    folowers(newFollowerCount, oldFollowerCount) {\n      if (oldFollowerCount < newFollowerCount) {\n        console.log(`${this.user.username} has gained a follower! Congrats!`);\n      }\n    }\n  },\n  //Object for computed data\n  computed: {\n    fullName() {\n      //${} is used for formating text insted of this.user.firstName + this.user.lastName\n      return `${this.user.firstName} ${this.user.lastName}`;\n    },\n    newPostCharacterCount() {\n        return this.newPostContent.length;\n    }\n  },\n  methods: {\n    followUser() {\n      this.folowers++;\n    },\n    toggleFavourite(id) {\n        console.log('Favorited post ' + id)\n    },\n    createNewPost() {\n        if(this.newPostContent && this.selectedPostType !== 'draft') {\n            //This method is adding new Post object to the front of posts list\n            this.user.posts.unshift({\n                id: this.user.posts.length + 1,\n                content: this.newPostContent\n            })\n        }\n        this.newPostContent = '';\n    }\n  },\n  //Methot that runs when the component is loaded for the first time\n  mounted() {\n    this.followUser();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.user-profile {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    width: 100%;\n    padding: 50px 5%;\n\n    .user-profile_user-panel {\n        display: flex;\n        flex-direction: column;\n        margin-right: 50px;\n        padding: 20px;\n        background-color: white;\n        border-radius: 5px;\n        border: 1px solid whitesmoke;\n\n        h1 {\n            margin: 0;\n        }\n\n        .user-profile_admin-badge {\n            background: navy;\n            color: white;\n            border-radius: 5px;\n            margin-right: auto;\n            padding: 0 10px;\n            font-weight: bold;\n        }\n\n        .user-profile_create-post {\n            display: flex;\n            flex-direction: column;\n            border-top: 1px solid whitesmoke;\n            margin-top: 20px;\n\n            &.exceeded {\n                color: red;\n                border-color: red;\n                button {\n                    background-color: red;\n                    border-color: red;\n                }\n            }\n        }\n    }  \n\n    .user-profile_post-wrapper {\n        display: grid;\n        grid-gap: 10px;\n    }\n}\n</style>"],"sourceRoot":""}]}