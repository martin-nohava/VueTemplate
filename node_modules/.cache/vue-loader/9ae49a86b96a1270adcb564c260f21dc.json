{"remainingRequest":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/martin_nohava/Documents/VueTemplate/src/components/CreatePostPanel.vue?vue&type=style&index=0&id=8c4414b0&lang=scss&scoped=true","dependencies":[{"path":"/Users/martin_nohava/Documents/VueTemplate/src/components/CreatePostPanel.vue","mtime":1602521886897},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jcmVhdGUtcG9zdC1wYW5lbCB7CiAgICBtYXJnaW4tdG9wOiAyMHB4OwogICAgcGFkZGluZzogMjBweCAwOwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CgogICAgdGV4dGFyZWEgewogICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlc21va2U7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgfQoKICAgIC5jcmVhdGUtcG9zdC1wYW5lbF9zdWJtaXQgewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwoKICAgICAgICAuY3JlYXRlLXBvc3QtdHlwZSB7CiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMDsKICAgICAgICB9CgogICAgICAgIGJ1dHRvbiB7CiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAyMHB4OwogICAgICAgICAgICBtYXJnaW46IGF1dG8gMDsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRlZXBwaW5rOwogICAgICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgIH0KICAgIH0KCiAgICAmLmV4Y2VlZGVkIHsKICAgICAgICBjb2xvcjogcmVkOwogICAgICAgIGJvcmRlci1jb2xvcjogcmVkOwoKICAgICAgICAuY3JlYXRlLXBvc3QtcGFuZWxfc3VibWl0IHsKICAgICAgICAgICAgYnV0dG9uIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDsKICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICB9Cn0K"},{"version":3,"sources":["/Users/martin_nohava/Documents/VueTemplate/src/components/CreatePostPanel.vue"],"names":[],"mappings":"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","file":"/Users/martin_nohava/Documents/VueTemplate/src/components/CreatePostPanel.vue","sourceRoot":"","sourcesContent":["<template>\n    <!--@submit.prevent is disabling default event of form element and adding custom-->\n    <!--class exceeded is added when condition is met-->\n    <form class=\"create-post-panel\" @submit.prevent=\"createNewPost\" :class=\"{'exceeded': newPostCharacterCount > 69}\">\n        <label for=\"newPost\"><strong>New Post</strong> ({{newPostCharacterCount}}/69) </label>\n        <!--V-model is saving value of textfield to selected variable-->\n        <textarea id=\"newPost\" rows=\"4\" v-model=\"state.newPostContent\"/>\n    \n        <div class=\"create-post-panel_submit\">    \n            <div class=\"create-post-type\">\n                <label for=\"newPostType\"><strong>Type:</strong></label>\n                <select id=\"newPostType\" v-model=\"state.selectedPostType\">\n                    <!--Using index of array as unique key parametr-->\n                    <option v-for=\"(option, index) in state.postTypes\" :key=\"index\" :value=\"option.value\">\n                        {{option.name}}\n                    </option>\n                </select>\n            </div>\n            <button>\n                Post It!\n            </button>\n        </div>\n    </form>\n</template>\n\n<script>\nimport {reactive, computed} from 'vue';\n//Created with composition API\nexport default {\n    name: 'CreatePostPanel',\n    setup(props, ctx) {\n        const state = reactive({\n            newPostContent: '',\n            selectedPostType: 'instant',\n            postTypes: [\n                {\n                    value: 'draft',\n                    name: 'Draft'\n                },\n                {\n                    value: 'instant',\n                    name: 'Instant Post'\n                }\n            ]\n        })\n\n        const newPostCharacterCount = computed(() => state.newPostContent.length)\n\n        function createNewPost() {\n            if(state.newPostContent && state.selectedPostType !== 'draft') {\n                ctx.$emit('add-post', state.newPostContent)\n            }\n            state.newPostContent = '';\n        }\n        \n        return {\n            state,\n            newPostCharacterCount,\n            createNewPost\n        }\n    } \n}\n</script>\n\n<style lang=\"scss\" scoped>\n.create-post-panel {\n    margin-top: 20px;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n\n    textarea {\n        border: 1px solid whitesmoke;\n        border-radius: 5px;\n    }\n\n    .create-post-panel_submit {\n        display: flex;\n        justify-content: space-between;\n\n        .create-post-type {\n            padding: 10px 0;\n        }\n\n        button {\n            padding: 5px 20px;\n            margin: auto 0;\n            border-radius: 5px;\n            border: none;\n            background-color: deeppink;\n            color: white;\n            font-weight: bold;\n        }\n    }\n\n    &.exceeded {\n        color: red;\n        border-color: red;\n\n        .create-post-panel_submit {\n            button {\n                background-color: red;\n                color: white;\n            }\n        }\n\n    }\n}\n</style>"]}]}