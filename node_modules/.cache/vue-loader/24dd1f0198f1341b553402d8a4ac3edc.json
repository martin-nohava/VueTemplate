{"remainingRequest":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue","mtime":1602505656739},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/martin_nohava/Documents/VueTemplate/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51c2VyLXByb2ZpbGUgewogICAgZGlzcGxheTogZ3JpZDsKICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogNTBweCA1JTsKfQoKLnVzZXItcHJvZmlsZV91c2VyLXBhbmVsIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgbWFyZ2luLXJpZ2h0OiA1MHB4OwogICAgcGFkZGluZzogMjBweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGVzbW9rZTsKfQoKLnVzZXItcHJvZmlsZV9hZG1pbi1iYWRnZSB7CiAgICBiYWNrZ3JvdW5kOiBuYXZ5OwogICAgY29sb3I6IHdoaXRlOwogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgcGFkZGluZzogMCAxMHB4OwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi51c2VyLXByb2ZpbGVfY3JlYXRlLXBvc3QgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgd2hpdGVzbW9rZTsKICAgIG1hcmdpbi10b3A6IDIwcHg7Cn0KCmgxIHsKICAgIG1hcmdpbjogMDsKfQo="},{"version":3,"sources":["/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue"],"names":[],"mappings":"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","file":"/Users/martin_nohava/Documents/VueTemplate/src/components/UserProfile.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"user-profile\">\n    <div class=\"user-profile_user-panel\">\n        <h1 class=\"user-profile_username\">{{user.username}}</h1>\n        <div class=\"user-profile_admin-badge\" v-if=\"user.isAdmin\">\n            Admin\n        </div>\n        <div class=\"user-profile_follower-count\">\n            <strong>Followers</strong> {{folowers}}\n        </div>\n        <!--@submit.prevent is disabling default event of form element and adding custom-->\n        <form class=\"user-profile_create-post\" @submit.prevent=\"createNewPost\">\n            <label for=\"newPost\"><strong>New Post</strong></label>\n            <!--V-model is saving value of textfield to selected variable-->\n            <textarea id=\"newPost\" rows=\"4\" v-model=\"newPostContent\"/>\n        \n            <div class=\"user-profile_create-post-type\">\n                <label for=\"newPostType\"><strong>Type:</strong></label>\n                <select id=\"newPostType\" v-model=\"selectedPostType\">\n                    <!--Using index of array as unique key parametr-->\n                    <option v-for=\"(option, index) in postTypes\" :key=\"index\" :value=\"option.value\">\n                        {{option.name}}\n                    </option>\n                </select>\n            </div>\n            <button>\n                Post\n            </button>\n        </form>\n    </div>\n    <div class=\"user-profile_posts-wrapper\">\n       <PostItem \n            v-for=\"post in user.posts\" \n            v-bind:key=\"post.id\" \n            v-bind:username=\"user.username\" \n            v-bind:post=\"post\" \n            @favourite=\"toggleFavourite\">\n       </PostItem>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostItem from './PostItem.vue';\n\nexport default {\n  name: 'UserProfile',\n  components: {\n      PostItem\n  },\n  //Function for storing and returning data of our application\n  data() {\n    return {\n        newPostContent: '',\n        selectedPostType: 'instant',\n        folowers: 0,\n        postTypes: [\n          {\n            value: 'draft',\n            name: 'Draft'\n          },\n          {\n            value: 'instant',\n            name: 'Instant Post'\n          }\n        ],\n      //Temp user object\n      user: {\n        id: 1,\n        username: '@martin_nohava',\n        firstName: 'Martin',\n        lastName: 'Nohava',\n        email: 'martin@nohava.cz',\n        isAdmin: true,\n        posts: [\n            {\n                id: 1,\n                content: 'Hello World, my first post!'\n            },\n            {\n                id: 2,\n                content: 'Catch me if you can.'\n            }\n        ]\n      }\n    }\n  },\n  //Watches a datapoint and when change is detected on that datapoint this method is executed\n  watch: {\n    folowers(newFollowerCount, oldFollowerCount) {\n      if (oldFollowerCount < newFollowerCount) {\n        console.log(`${this.user.username} has gained a follower! Congrats!`);\n      }\n    }\n  },\n  //Object for computed data\n  computed: {\n    fullName() {\n      //${} is used for formating text insted of this.user.firstName + this.user.lastName\n      return `${this.user.firstName} ${this.user.lastName}`;\n    }\n  },\n  methods: {\n    followUser() {\n      this.folowers++;\n    },\n    toggleFavourite(id) {\n        console.log('Favorited post ' + id)\n    },\n    createNewPost() {\n        if(this.newPostContent && this.selectedPostType !== 'draft') {\n            //This method is adding new Post object to the front of posts list\n            this.user.posts.unshift({\n                id: this.user.posts.length + 1,\n                content: this.newPostContent\n            })\n        }\n    }\n  },\n  //Methot that runs when the component is loaded for the first time\n  mounted() {\n    this.followUser();\n  }\n}\n</script>\n\n<style>\n.user-profile {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    width: 100%;\n    padding: 50px 5%;\n}\n\n.user-profile_user-panel {\n    display: flex;\n    flex-direction: column;\n    margin-right: 50px;\n    padding: 20px;\n    background-color: white;\n    border-radius: 5px;\n    border: 1px solid whitesmoke;\n}\n\n.user-profile_admin-badge {\n    background: navy;\n    color: white;\n    border-radius: 5px;\n    margin-right: auto;\n    padding: 0 10px;\n    font-weight: bold;\n}\n\n.user-profile_create-post {\n    display: flex;\n    flex-direction: column;\n    border-top: 1px solid whitesmoke;\n    margin-top: 20px;\n}\n\nh1 {\n    margin: 0;\n}\n</style>"]}]}